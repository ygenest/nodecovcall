<script type="text/javascript">
	$(function() {
		var repl = new REPL();
		$("#REPL").submit(function(e) {
			e.preventDefault();
			var $form = $(this), $input = $("#json", $form), $query = $("#query", $form), $target = $("#print", $form);
			repl.exec($input.val(), $query.val(), $target);
			return false;
		});
	});
</script>

<form action="#" method="GET" id="REPL">
	<h1>Try SpahQL</h1>
	<fieldset class="read">
		<label for="json">JSON data</label>
		<textarea id="json" name="json" class="text">
{
	"hash1": {
		"a": "hash.a",
		"b": "hash.b",
		"c": "hash.c",
		"subhash": {
			"a": "hash.subhash.a",
			"b": "hash.subhash.b",
			"c": "hash.subhash.c"
		}
	},
	"hash2": {
		"a": "hash.a",
		"b": "hash.b",
		"c": "hash.c",
		"subhash": {
			"a": "hash.subhash.a",
			"b": "hash.subhash.b",
			"c": "hash.subhash.c"
		}
	},
	"arr1": [
		"first",
		"second", 
		"third",
		"fourth",
		"fifth"
	],
	"arr2": [
		"first",
		"second", 
		"third",
		"fourth",
		"fifth"
	],
	"arrayofobjects": [
		{
		"a": "AA 0",
		"b": "BB 0",
		"c": "CC 0",
		"subhash": {
			"a": "AAAA 0",
			"b": "BBBB 0",
			"c": "CCCC 0"
			}
		},
		{
		"a": "AA 1",
		"b": "BB 1",
		"c": "CC 1",
		"subhash": {
			"a": "AAAA 1",
			"b": "BBBB 1",
			"c": "CCCC 1"
			}
		},
		{
		"a": "AA 2",
		"b": "BB 2",
		"c": "CC 2",
		"subhash": {
			"a": "AAAA 2",
			"b": "BBBB 2",
			"c": "CCCC 2"
			}
		}
	]
}
		</textarea>
	</fieldset>
	<fieldset class="execute">
		<label for="query">SpahQL query</label>
		<input type="text" id="query" name="query" class="text" />
		<input type="submit" value="Run" class="submit" />
	</fieldset>
	<div class="print" id="print">
	</div>
</form>

#Examples

Select from an object by path: 

	/hash/subhash

Select from an array:

	/arr1/0
	/arr2/1
	/arr1/2
	...

Select from an array of objects:

	/arrayofobjects/0/a

Select recursively by path:

	/arrayofobjects//a //-> all "a" keys in /arrayofobjects

Select all keys in an object:

	/hash1/* //-> all keys from /hash1

Select all matching a criteria:

	//*[/.type == 'array'][/.size > 0] //-> all non-empty arrays

Set literals:

	{"extra string", /arr1/0, /arr2/*} //-> A single set containing a string literal, the first item from /arr1 and all items from /arr2

Basic literals:

	3
	"three"
	true
	false

Properties:

	/.size //-> Number of keys on the root object
	/arr1/.size //-> Length of /arr1
	/arr1/0/.size //-> Length of string at /arr1/0

	/arr1/.type //-> "array"
	/.type //-> "object"

Basic equalities:

	/hash1/a == "does the value match this?"
	/hash1 == /hash2 //-> will be compared recursively

Basic inequalities:

	/arr1/.size > 10 //-> /arr1 longer than 10 items?
	/arr1/0/.size <= 100 //-> /arr/0 is 100 characters or less?

Rough equalities:

	/hash1/a =~ "^value matches this regex\?"

Supersets:

	//a }>{ "is there an "a" key matching this?"

Subsets:

	/hash1/a }<{ {"does", "the", "value", "match", "any of these?"}

Joint sets:

	//a }~{ {"any", "'a' keys", "matching", "any of these?"}

Disjoint sets:

	//a }!{ {"none of the", "'a' keys", "match", "any of these"}